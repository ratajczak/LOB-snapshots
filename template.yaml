AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Serverless app for saving Poloniex limit order book every 10 seconds.

Parameters:
  NotificationEmail:
    Type: AWS::SSM::Parameter::Value<String>
    Default: myemail # aws ssm put-parameter --name "" --type String --value "" --region eu-west-2

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: True
      EnableDnsSupport: True

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.11.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.12.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.13.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]

  NATGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NATGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NATGateway3EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NATGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  NATGateway3:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGateway3EIP.AllocationId
      SubnetId: !Ref PublicSubnet3

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1

  PrivateRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2

  PrivateRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2

  PrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPrivateRoute3:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway3

  PrivateRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      SubnetId: !Ref PrivateSubnet3

  FileSystemResource:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose
      Encrypted: false
      FileSystemPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "elasticfilesystem:ClientMount"
            Principal:
              AWS: "*"

  MountTargetResource1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystemResource
      SubnetId: !Ref PrivateSubnet1
      SecurityGroups:
      - !GetAtt VPC.DefaultSecurityGroup

  MountTargetResource2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystemResource
      SubnetId: !Ref PrivateSubnet2
      SecurityGroups:
      - !GetAtt VPC.DefaultSecurityGroup

  MountTargetResource3:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystemResource
      SubnetId: !Ref PrivateSubnet3
      SecurityGroups:
      - !GetAtt VPC.DefaultSecurityGroup

  AccessPointResource:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref FileSystemResource
      PosixUser:
        Uid: "1000"
        Gid: "1000"
      RootDirectory:
        CreationInfo:
          OwnerGid: "1000"
          OwnerUid: "1000"
          Permissions: "0777"
        Path: "/LOBSnapshots"

  GetSnapshots:
    Type: AWS::Serverless::Function
    DependsOn: MountTargetResource1
    Properties:
      Handler: functions/get_snapshots.lambda_handler
      Runtime: python3.6
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt VPC.DefaultSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
          - !Ref PrivateSubnet3
      FileSystemConfigs:
        - LocalMountPath: "/mnt/efs"
          Arn: !GetAtt AccessPointResource.Arn
      Policies:
        - AmazonElasticFileSystemClientReadWriteAccess
        - AWSLambdaVPCAccessExecutionRole
      Events:
        RunEveryTwelveMinutes:
          Type: Schedule
          Properties:
            Schedule: cron(11-59/12 * * * ? *) # every 12 minutes starting at 11th minute of each hour

  AggregateHour:
    Type: AWS::Serverless::Function
    DependsOn: MountTargetResource1
    Properties:
      Handler: functions/aggregate_hour.lambda_handler
      Runtime: python3.6
      Timeout: 900
      MemorySize: 640
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt VPC.DefaultSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
          - !Ref PrivateSubnet3
      FileSystemConfigs:
        - LocalMountPath: "/mnt/efs"
          Arn: !GetAtt AccessPointResource.Arn
      Policies:
        - AmazonElasticFileSystemClientReadWriteAccess
        - AWSLambdaVPCAccessExecutionRole
      Events:
        RunAggregateHourEveryHour:
          Type: Schedule
          Properties:
            Schedule: cron(0 * * * ? *) # every hour
      Environment:
        Variables:
          DATA_BUCKET: !Ref LimitOrderBookSnapshots

  MoveToS3:
    Type: AWS::Serverless::Function
    DependsOn: MountTargetResource1
    Properties:
      Handler: functions/move_to_s3.lambda_handler
      Runtime: python3.6
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt VPC.DefaultSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
          - !Ref PrivateSubnet3
      FileSystemConfigs:
        - LocalMountPath: "/mnt/efs"
          Arn: !GetAtt AccessPointResource.Arn
      Policies:
        - AmazonElasticFileSystemClientReadWriteAccess
        - AWSLambdaVPCAccessExecutionRole
        -
          S3CrudPolicy:
            BucketName: !Ref LimitOrderBookSnapshots
      Events:
        RunAggregateHourEveryHour:
          Type: Schedule
          Properties:
            Schedule: cron(20 * * * ? *) # every hour
      Environment:
        Variables:
          DATA_BUCKET: !Ref LimitOrderBookSnapshots

  LimitOrderBookSnapshots:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Suspended
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 3
            Status: Enabled

  LogGroupGetSnapshots:
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 7
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref GetSnapshots]]

  LogGroupAggregateHour:
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 7
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref AggregateHour]]

  MetricFilterGetSnapshots:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LogGroupGetSnapshots
      FilterPattern: '?Exception ?Error ?error'
      MetricTransformations:
      - MetricValue: '1'
        MetricNamespace: test/missingData
        MetricName: GetSnapshotsError

  MetricFilterAggregateHour:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LogGroupAggregateHour
      FilterPattern: '?Exception ?Error ?error ?Missing ?Gap'
      MetricTransformations:
      - MetricValue: '1'
        MetricNamespace: test/missingData
        MetricName: MissingSnapshotsInTempFolder

  AlarmGetSnapshots:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Snapshot not saved to temp folder
        MetricName: GetSnapshotsError
        Namespace: test/missingData
        Statistic: Sum
        Period: 60
        EvaluationPeriods: 1
        Threshold: 1
        TreatMissingData: notBreaching
        AlarmActions:
        - !Ref AlarmNotificationTopic
        ComparisonOperator: GreaterThanThreshold

  AlarmAggregateHour:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Missing snapshots on attept to move them to S3
        MetricName: MissingSnapshotsInTempFolder
        Namespace: test/missingData
        Statistic: Sum
        Period: 3600
        EvaluationPeriods: 1
        Threshold: 1
        TreatMissingData: notBreaching
        AlarmActions:
        - !Ref AlarmNotificationTopic
        ComparisonOperator: GreaterThanThreshold

  AlarmNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Protocol: email
        Endpoint: !Ref NotificationEmail
