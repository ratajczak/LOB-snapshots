AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless app for saving Poloniex limit order book every 10 seconds.

Resources:
  GetLOBSnapshots:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/get_lob_snapshots.lambda_handler
      Runtime: python3.7
      Timeout: 90
      Policies:
        -
          DynamoDBWritePolicy:
            TableName: !Ref CacheLOBDumps
      Events:
        RunLOBSnapshotsEveryMinute:
          Type: Schedule
          Properties:
            Schedule: cron(0/1 * * * ? *) # every minute
      Environment:
        Variables:
          TABLE_NAME: !Ref CacheLOBDumps

  HourlyDumps:
    Type: AWS::Serverless::Function
    Properties:
      Handler: functions/hourly_dumps.lambda_handler
      Runtime: python3.7
      Timeout: 900
      MemorySize: 2048 #1728
      Policies:
        -
          DynamoDBReadPolicy:
            TableName: !Ref CacheLOBDumps
        -
          S3CrudPolicy:
            BucketName: !Ref LimitOrderBookSnapshots
      Events:
        RunHourlyDumpsEveryHour:
          Type: Schedule
          Properties:
            Schedule: cron(0 * * * ? *) # every hour
      Environment:
        Variables:
            TABLE_NAME: !Ref CacheLOBDumps
            DUMPS_BUCKET: !Ref LimitOrderBookSnapshots

  CacheLOBDumps:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CacheLOBDumps
      AttributeDefinitions:
        - AttributeName: Pair
          AttributeType: S
        - AttributeName: Timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: Pair
          KeyType: HASH
        - AttributeName: Timestamp
          KeyType: RANGE
      TimeToLiveSpecification: 
        AttributeName: TTL
        Enabled: true
      ProvisionedThroughput:
          ReadCapacityUnits: 20
          WriteCapacityUnits: 21

  LimitOrderBookSnapshots:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      VersioningConfiguration:
        Status: Suspended
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 3
            Status: Enabled

  GetLOBSnapshotLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 7
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref GetLOBSnapshots]]

  HourlyDumpsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      RetentionInDays: 7
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref HourlyDumps]]


  MetricFilter:
      Type: AWS::Logs::MetricFilter
      Properties:
        LogGroupName: !Ref HourlyDumpsLogGroup
        FilterPattern: '[Missing, Gap]'
        MetricTransformations:
        - MetricValue: '1'
          MetricNamespace: test/missingData
          MetricName: missingSnapshots
  Alarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmDescription: Missing LOB snapshots on attept to move them to S3
        MetricName: missingSnapshots
        Namespace: test/missingData
        Statistic: Sum
        Period: 3600
        EvaluationPeriods: 1
        Threshold: 1
        AlarmActions:
        - !Ref AlarmNotificationTopic
        ComparisonOperator: GreaterThanThreshold

  AlarmNotificationTopic:
    Type: AWS::SNS::Topic
    # Properties:
    #   Subscription:
    #   - Protocol: email
    #     Endpoint: me@example.co.uk
